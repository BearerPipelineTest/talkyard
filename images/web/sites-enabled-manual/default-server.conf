server {
  listen 80 backlog=8192;   # about backlog: [BACKLGSZ] in talkyard-prod-one

  # Using ipv6 here, can prevent Nginx from starting, if the host OS has disabled ipv6,
  # Nginx then won't start and says:  [OSIPV6]
  #    [emerg] socket() [::]:80 failed (97: Address family not supported by protocol)
  #listen [::]:80 backlog=8192;

  server_name _;

  ## For generating HTTPS certs via LetsEncrypt, HTTP-01 challenge.
  location /.well-known/acme-challenge {
    content_by_lua_block {
      ngx.log(ngx.INFO, "Replying to ACME HTTP-01 challenge" ..
              ", server name: " ..  ngx.var.server_name ..
              ", host: " .. ngx.var.http_host .. " [TyNACMEHTTP01]")
      require("resty.acme.autossl").serve_http_challenge()
    }
  }

  include /etc/nginx/server-locations.conf;
  include /etc/nginx/server-limits.conf;
}



## Port *8*443, and no HTTP2 â€” for comparing performance with and without.
##
server {
  listen 8443 ssl backlog=8192;  # [BACKLGSZ]
  #listen [::]:80 backlog=8192;  # [OSIPV6]

  server_name _;

  ssl_certificate     /etc/nginx/ssl-cert-snakeoil.pem;
  ssl_certificate_key /etc/nginx/ssl-cert-snakeoil.key;

  include /etc/nginx/server-ssl.conf;
  include /etc/nginx/server-locations.conf;
  include /etc/nginx/server-limits.conf;
}


server {
  listen 443 ssl http2 default_server backlog=8192;  #  [BACKLGSZ]
  #listen [::]:80 backlog=8192;       # [OSIPV6]

  server_name _;

  ## Required, or Nginx won't start. Gets used until we've gotten a LetsEncrypt cert
  ## (sth like 10 seconds after first request to server addr).
  ssl_certificate     /etc/nginx/https-cert-self-signed-fallback.pem;
  ssl_certificate_key /etc/nginx/https-cert-self-signed-fallback.key;

  ssl_certificate_by_lua_block {
    -- Cannot access ngx.var.http_host (HTTP headers not yet decrypted)
    -- or ngx.var.server_name here.
    ngx.log(ngx.DEBUG, "Should gen cert?")
    require("resty.acme.autossl").ssl_certificate()
  }

  location /.well-known/acme-challenge {
    content_by_lua_block {
      require("resty.acme.autossl").serve_http_challenge()
    }
  }

  include /etc/nginx/server-ssl.conf;
  include /etc/nginx/server-locations.conf;
  include /etc/nginx/server-limits.conf;
}
